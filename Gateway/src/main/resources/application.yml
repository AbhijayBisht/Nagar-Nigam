server:
  port: 8084
  address: 127.0.0.1

spring:
  application:
    name: Api-Gateway
  cloud:
    gateway:
      routes:
      - id: User-Data-Management
        uri: lb://User-Data-Management
        predicates:
          - Path=/api/user/v1/**
        filters:
          - AuthenticationFilter

      - id: Property-Data-Management
        uri: lb://Property-Data-Management
        predicates:
          - Path=/api/property/v1/**
        filters:
          - AuthenticationFilter

      - id: Tax-Data-Management
        uri: lb://Tax-Data-Management
        predicates:
          - Path=/api/tax/v1/**
        filters:
          - AuthenticationFilter

      - id: Gateway
        uri: http://localhost:8084
        predicates:
          - Path=/api/gateway/v1/**
        filters:
          - AuthenticationFilter
        order: 1

      - id: Auth-Authentication-Manager
        uri: lb://Auth-Authentication-Manager
        predicates:
          - Path=/api/auth/v1/**
        filters:
          - AuthenticationFilter
        order: 2
eureka:
  instance:
    prefer-ip-address: false
    hostname: localhost
    ip-address: 127.0.0.1
    instance-id: ${spring.application.name}:${server.port}
  client:
    fetch-registry: true
    register-with-eureka: true
    service-url:
      defaultZone: http://localhost:8761/eureka
logging:
  level:
    com.netflix.eureka: debug
    feign: debug
    root: INFO
    com.ApiGateway.Gateway.filter: DEBUG
    org.springframework.web: DEBUG
    org.springframework.security: DEBUG
    org.springframework.cloud.gateway: DEBUG